##################################################################################################################
# This is the TF VARS file for setting up basic intranet zone with the following
# - internet ingress and egress vnet
# - intranet ingress and egress vnet
# - management vnet 
# - devops vnet
# - dns forwarding vnet 
##################################################################################################################

subscription_id = "{{ subscription_id }}"
tenant_id       = "{{ tenant_id }}"
client_id       = "{{ client_id }}"
client_secret   = "{{ client_secret }}"

##########################################
# Resource Group module
##########################################

random_string_length = {{ random_string_length}}
location             = "{{ location }}"

# Resource groups
resource_groups = {
  {% if internet_ingress_zone | trim == '1' %}
  internet_ingress_rg = {
    name = "{{ internet_ingress_resource_group_name | safe }}"
  }
  {% endif %}

  {% if internet_egress_zone | trim == '1' %}
  # optional
  internet_egress_rg = {
    name = "{{ internet_egress_resource_group_name | safe}}"
  }
  {% endif %}

  {% if intranet_ingress_zone | trim == '1' %}
  intranet_ingress_rg = {
    name = "{{ intranet_ingress_resource_group_name }}"
  }
  {% endif %}

  {% if intranet_egress_zone | trim == '1' %}
  # optional
  intranet_egress_rg = {
    name = "{{ intranet_egress_resource_group_name }}"
  }
  {% endif %}

  {% if workload_zone | trim == '1' %}
  workload_rg = {
    name = "{{ workload_resource_group_name }}"
  }
  {% endif %}

  {% if mgmt_zone | trim == '1' %}
  mgmt_rg = {
    name = "{{ mgmt_resource_group_name }}"
  }
  {% endif %}

  {% if devops_zone | trim == '1' %}
  devops_rg = {
    name = "{{ devops_resource_group_name }}"
  }
  {% endif %}

  {% if dns_forwarding_zone | trim == '1' %}
  # for on-premise GSIB to resolve private endpoints e.g. synapse web endpoint
  dns_forwarding_rg = {
    name = "{{ dns_forwarding_resource_group_name }}"
  }
  {% endif %}
}

##########################################
# Network module - vnet, subnet, peering
##########################################

# Virtual networks
virtual_networks = {
  {% if internet_ingress_zone | trim == '1' %}
  # internet ingress vnet
  internet_ingress_vnet = {
    rg_key = "internet_ingress_rg"
    name   = "{{ internet_ingress_vnet_name }}"
    address_space = ["{{ internet_ingress_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Public (Non-GEN)"
    }
  }
  {% endif %}

  {% if internet_egress_zone | trim == '1' %}
  # internet egress vnet
  internet_egress_vnet = {
    rg_key = "internet_egress_rg"
    name   = "{{ internet_egress_vnet_name }}"
    address_space = ["{{ internet_egress_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Public (Non-GEN)"
    }
  }
  {% endif %}

  {% if intranet_ingress_zone | trim == '1' %}
  # intranet ingress vnet
  intranet_ingress_vnet = {
    rg_key = "intranet_ingress_rg"
    name   = "{{ intranet_ingress_vnet_name }}"
    address_space = ["{{ intranet_ingress_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Public (GEN)"
    }
  }
  {% endif %}

  {% if intranet_egress_zone | trim == '1' %}
  # intranet egress vnet
  intranet_egress_vnet = {
    rg_key = "intranet_egress_rg"
    name   = "{{ intranet_egress_vnet_name }}"
    address_space = ["{{ intranet_egress_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Public (GEN)"
    }
  }
  {% endif %}

  {% if workload_zone | trim == '1' %}
  # workload vnet
  workload_vnet = {
    rg_key = "workload_rg"
    name   = "{{ workload_vnet_name }}"
    address_space = ["{{ workload_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Private (Non-GEN)"
    }
  }
  {% endif %}

  {% if mgmt_zone | trim == '1' %}
  # mgmt vnet
  mgmt_vnet = {
    rg_key = "mgmt_rg"
    name   = "{{ mgmt_vnet_name }}"
    address_space = ["{{ mgmt_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Private (GEN)"
    }
  }
  {% endif %}

  {% if devops_zone | trim == '1' %}
  # devops vnet
  devops_vnet = {
    rg_key = "devops_rg"
    name   = "{{ devops_vnet_name }}"
    address_space = ["{{ devops_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Private (Non-GEN)" # can be Agency managed as well for SHIP-HATS as need to provision VPN Gateway for S2S
    }
  }
  {% endif %}

  {% if dns_forwarding_zone | trim == '1' %}
  # dns vnet
  dns_forwarding_vnet = {
    rg_key = "dns_forwarding_rg"
    name   = "{{ dns_forwarding_vnet_name }}"
    address_space = ["{{ dns_forwarding_vnet_cidr }}"]
    tags          = {
      "Compartment" = "Public (GEN)" 
    }
  }
  {% endif %}
}

# Virtual network peerings
vnet_peers = {

  {% if (internet_ingress_zone | trim == '1') and (workload_zone | trim == '1') %}
  # internet ingress and workload 
  internet_ingress_workload_vnet_peer = {
    rg_key                       = "internet_ingress_rg"
    vnet_key                     = "internet_ingress_vnet"
    remote_vnet_key              = "workload_vnet"
    name                         = "internet_ingress_workload_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (internet_egress_zone | trim == '1') and (workload_zone | trim == '1') %}
  # internet egress and workload 
  internet_egress_workload_vnet_peer = {
    rg_key                       = "internet_egress_rg"
    vnet_key                     = "internet_egress_vnet"
    remote_vnet_key              = "workload_vnet"
    name                         = "internet_egress_workload_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (intranet_ingress_zone | trim == '1') and (workload_zone | trim == '1') %}
  # intranet ingress and workload 
  intranet_ingress_workload_vnet_peer = {
    rg_key                       = "intranet_ingress_rg"
    vnet_key                     = "intranet_ingress_vnet"
    remote_vnet_key              = "workload_vnet"
    name                         = "intranet_ingress_workload_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (intranet_egress_zone | trim == '1') and (workload_zone | trim == '1') %}
  # intranet egress and workload 
  intranet_egress_workload_vnet_peer = {
    rg_key                       = "intranet_egress_rg"
    vnet_key                     = "intranet_egress_vnet"
    remote_vnet_key              = "workload_vnet"
    name                         = "intranet_egress_workload_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (internet_egress_zone | trim == '1') and (mgmt_zone | trim == '1') %}
  # mgmt and internet egress 
  mgmt_internet_egress_vnet_peer = {
    rg_key                       = "mgmt_rg"
    vnet_key                     = "mgmt_vnet"
    remote_vnet_key              = "internet_egress_vnet"
    name                         = "mgmt_internet_egress_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% elif (internet_egress_zone | trim == '0') and (mgmt_zone | trim == '1') %}
  # mgmt and internet ingress 
  mgmt_internet_ingress_vnet_peer = {
    rg_key                       = "mgmt_rg"
    vnet_key                     = "mgmt_vnet"
    remote_vnet_key              = "internet_ingress_vnet"
    name                         = "mgmt_internet_ingress_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (mgmt_zone | trim == '1') and (workload_zone | trim == '1') %}
  # mgmt and workload 
  mgmt_workload_vnet_peer = {
    rg_key                       = "mgmt_rg"
    vnet_key                     = "mgmt_vnet"
    remote_vnet_key              = "workload_vnet"
    name                         = "mgmt_workload_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (devops_zone | trim == '1') and (internet_egress_zone | trim == '1') %}
  # devops and internet egress 
  devops_internet_egress_vnet_peer = {
    rg_key                       = "devops_rg"
    vnet_key                     = "devops_vnet"
    remote_vnet_key              = "internet_egress_vnet"
    name                         = "devops_internet_egress_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% elif (devops_zone | trim == '1') and (internet_egress_zone | trim == '0') %}
  # devops and internet ingress 
  devops_internet_ingress_vnet_peer = {
    rg_key                       = "devops_rg"
    vnet_key                     = "devops_vnet"
    remote_vnet_key              = "internet_ingress_vnet"
    name                         = "devops_internet_ingress_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}

  {% if (devops_zone | trim == '1') and (workload_zone | trim == '1') %}
  # devops and workload
  devops_workload_vnet_peer = {
    rg_key                       = "devops_rg"
    vnet_key                     = "devops_vnet"
    remote_vnet_key              = "workload_vnet"
    name                         = "devops_workload_vnet_peering"
    allow_virtual_network_access = "true"
    allow_forwarded_traffic      = "true"
    allow_gateway_transit        = "false"
    use_remote_gateways          = "false"
  }
  {% endif %}
}

# Subnets
subnets = {
  # /24 = 256, /25 = 128, /26 = 64, /27 = 32, /28 = 16, /29 = 8, /30 = 4, /31 = 2, /32 = 1
  # every subnet has 5 reserved IP addresses (first 4 and last 1)

  {% if (internet_ingress_zone | trim == '1') and (internet_ingress_fw | trim == '1') %}
  # internet ingress firewall subnet
  internet_ingress_firewall_subnet = {
    rg_key           = "internet_ingress_rg"
    vnet_key         = "internet_ingress_vnet"
    name             = "{{ internet_ingress_fw_subnet_name }}"
    address_prefixes = ["{{ internet_ingress_fw_subnet_cidr }}"]
  }
  {% endif %}

  {% if (internet_ingress_zone | trim == '1') and (internet_ingress_appgw | trim == '1') %}
  # internet ingress app gw subnet
  internet_ingress_appgw_subnet = {
    rg_key           = "internet_ingress_rg"
    vnet_key         = "internet_ingress_vnet"
    name             = "{{ internet_ingress_appgw_subnet_name }}"
    address_prefixes = ["{{ internet_ingress_appgw_subnet_cidr }}"]
  }
  {% endif %}

  {% if (internet_ingress_zone | trim == '1') and (internet_ingress_apim | trim == '1') %}
  # internet ingress apim subnet
  internet_ingress_apim_subnet = {
    rg_key           = "internet_ingress_rg"
    vnet_key         = "internet_ingress_vnet"
    name             = "{{ internet_ingress_apim_subnet_name }}"
    address_prefixes = ["{{ internet_ingress_apim_subnet_cidr }}"]
  }
  {% endif %}

  {% if (internet_ingress_zone | trim == '1') and (internet_ingress_sftp | trim == '1') %}
  # internet ingress sftp subnet
  internet_ingress_sftp_subnet = {
    rg_key           = "internet_ingress_rg"
    vnet_key         = "internet_ingress_vnet"
    name             = "{{ internet_ingress_sftp_subnet_name }}"
    address_prefixes = ["{{ internet_ingress_sftp_subnet_cidr }}"]
  }
  {% endif %}

  {% if (internet_egress_zone | trim == '1') and (internet_egress_fw | trim == '1') %}
  # internet egress firewall subnet
  internet_egress_firewall_subnet = {
    rg_key           = "internet_egress_rg"
    vnet_key         = "internet_egress_vnet"
    name             = "{{ internet_egress_fw_subnet_name }}"
    address_prefixes = ["{{ internet_egress_fw_subnet_cidr }}"]
  }
  {% endif %}

  {% if (intranet_ingress_zone | trim == '1') and (intranet_ingress_fw | trim == '1') %}
  # intranet ingress firewall subnet
  intranet_ingress_firewall_subnet = {
    rg_key           = "intranet_ingress_rg"
    vnet_key         = "intranet_ingress_vnet"
    name             = "{{ intranet_ingress_fw_subnet_name }}"
    address_prefixes = ["{{ intranet_ingress_fw_subnet_cidr }}"]
  }
  {% endif %}

  {% if (intranet_ingress_zone | trim == '1') and (intranet_ingress_appgw | trim == '1') %}
  # intranet ingress app gw subnet
  intranet_ingress_appgw_subnet = {
    rg_key           = "intranet_ingress_rg"
    vnet_key         = "intranet_ingress_vnet"
    name             = "{{ intranet_ingress_appgw_subnet_name }}"
    address_prefixes = ["{{ intranet_ingress_appgw_subnet_cidr }}"]
  }
  {% endif %}

  {% if (intranet_ingress_zone | trim == '1') and (intranet_ingress_apim | trim == '1') %}
  # intranet ingress apim subnet
  intranet_ingress_apim_subnet = {
    rg_key           = "intranet_ingress_rg"
    vnet_key         = "intranet_ingress_vnet"
    name             = "{{ intranet_ingress_apim_subnet_name }}"
    address_prefixes = ["{{ intranet_ingress_apim_subnet_cidr }}"]
  }
  {% endif %}

  {% if (intranet_ingress_zone | trim == '1') and (intranet_ingress_sftp | trim == '1') %}
  # intranet ingress sftp subnet
  intranet_ingress_sftp_subnet = {
    rg_key           = "intranet_ingress_rg"
    vnet_key         = "intranet_ingress_vnet"
    name             = "{{ intranet_ingress_sftp_subnet_name }}"
    address_prefixes = ["{{ intranet_ingress_sftp_subnet_cidr }}"]
  }
  {% endif %}

  {% if (intranet_egress_zone | trim == '1') and (intranet_egress_fw | trim == '1') %}
  # intranet egress firewall subnet
  intranet_egress_firewall_subnet = {
    rg_key           = "intranet_egress_rg"
    vnet_key         = "intranet_egress_vnet"
    name             = "{{ intranet_egress_fw_subnet_name }}"
    address_prefixes = ["{{ intranet_egress_fw_subnet_cidr }}"]
  }
  {% endif %}

  {% if (workload_zone | trim == '1') and (workload_app | trim == '1') %}
  # workload app subnet
  workload_app_subnet = {
    rg_key           = "workload_rg"
    vnet_key         = "workload_vnet"
    name             = "{{ workload_app_subnet_name }}"
    address_prefixes = ["{{ workload_app_subnet_cidr }}"]
  }
  {% endif %}

  {% if (workload_zone | trim == '1') and (workload_db | trim == '1') %}
  # workload db subnet
  workload_db_subnet = {
    rg_key           = "workload_rg"
    vnet_key         = "workload_vnet"
    name             = "{{ workload_db_subnet_name }}"
    address_prefixes = ["{{ workload_db_subnet_cidr }}"]
  }
  {% endif %}

  {% if (mgmt_zone | trim == '1') and (mgmt_bastion | trim == '1') %}
  # mgmt bastion subnet
  mgmt_bastion_subnet = {
    rg_key           = "mgmt_rg"
    vnet_key         = "mgmt_vnet"
    name             = "{{ mgmt_bastion_subnet_name }}"
    address_prefixes = ["{{ mgmt_bastion_subnet_cidr }}"]
  }
  {% endif %}

  {% if (mgmt_zone | trim == '1') and (mgmt_adds | trim == '1') %}
  # mgmt ADDS subnet
  mgmt_adds_subnet = {
    rg_key           = "mgmt_rg"
    vnet_key         = "mgmt_vnet"
    name             = "{{ mgmt_adds_subnet_name }}"
    address_prefixes = ["{{ mgmt_adds_subnet_cidr }}"]
  }
  {% endif %}

  {% if (mgmt_zone | trim == '1') and (mgmt_patch | trim == '1') %}
  # mgmt patch subnet
  mgmt_patch_subnet = {
    rg_key           = "mgmt_rg"
    vnet_key         = "mgmt_vnet"
    name             = "{{ mgmt_patch_subnet_name }}"
    address_prefixes = ["{{ mgmt_patch_subnet_cidr }}"]
  }
  {% endif %}

  {% if (devops_zone | trim == '1') and (devops_runner | trim == '1')%}
  # devops runner subnet
  devops_runner_subnet = {
    rg_key           = "devops_rg"
    vnet_key         = "devops_vnet"
    name             = "{{ devops_runner_subnet_name }}"
    address_prefixes = ["{{ devops_runner_subnet_cidr }}"]
  }
  {% endif %}

  {% if (dns_forwarding_zone | trim == '1') and (dns_forwarding_private_dns_resolver | trim == '1') %}
  # private dns resolver inbound subnet
  private_dns_resolver_inbound_subnet = {
    rg_key           = "dns_forwarding_rg"
    vnet_key         = "dns_forwarding_vnet"
    name             = "{{ dns_forwarding_private_dns_resolver_inbound_subnet_name }}"
    address_prefixes = ["{{ dns_forwarding_private_dns_resolver_inbound_subnet_cidr }}"]
  }
  
  # private dns resolver outbound subnet
  private_dns_resolver_outbound_subnet = {
    rg_key           = "dns_forwarding_rg"
    vnet_key         = "dns_forwarding_vnet"
    name             = "{{ dns_forwarding_private_dns_resolver_outbound_subnet_name }}"
    address_prefixes = ["{{ dns_forwarding_private_dns_resolver_outbound_subnet_cidr }}"]
  }
  {% endif %}
}

##########################################
# Route table module
##########################################

# Route tables
route_tables = {
  # workload_app_to_internet_egress_firewall_route_table = {
  #   rg_key                        = "workload_rg"
  #   name                          = "workload_app_to_internet_egress_firewall_route_table"
  #   disable_bgp_route_propagation = true
  #   routes = [
  #     {
  #       name                   = "Route-to-Firewall"
  #       address_prefix         = "0.0.0.0/0"
  #       next_hop_type          = "VirtualAppliance"
  #       next_hop_resource_type = "firewall"
  #       next_hop_resource_key  = "internet_egress_firewall"
  #     }
  #   ]
  #   tags = {}
  # }

  # mgmt_patch_to_internet_egress_firewall_route_table = {
  #   rg_key                        = "mgmt_rg"
  #   name                          = "mgmt_patch_to_internet_egress_firewall_route_table"
  #   disable_bgp_route_propagation = true
  #   routes = [
  #     {
  #       name                   = "Route-to-Firewall"
  #       address_prefix         = "0.0.0.0/0"
  #       next_hop_type          = "VirtualAppliance"
  #       next_hop_resource_type = "firewall"
  #       next_hop_resource_key  = "internet_egress_firewall"
  #     }
  #   ]
  #   tags = {}
  # }
}

# Route tables associations
route_tables_associations = {
  # workload_app_subnet_internet_egress_firewall_route_table_assoc = {
  #   subnet_key      = "workload_app_subnet"
  #   route_table_key = "workload_to_internet_egress_firewall_route_table"
  # }

  # mgmt_patch_subnet_internet_egress_firewall_route_table_assoc = {
  #   subnet_key      = "mgmt_patch_subnet"
  #   route_table_key = "mgmt_patch_to_internet_egress_firewall_route_table"
  # }
}

##########################################
# NSG module
##########################################

# Network security groups
network_security_groups = {
  {% if (internet_ingress_zone | trim == '1') and (internet_ingress_appgw_subnet_nsg | trim == '1') %}
  internet_appgw_subnet_nsg = {
    rg_key = "internet_ingress_rg"
    name   = "{{ internet_ingress_appgw_subnet_nsg_name }}"
    tags   = {}
    security_rules = [
      # inbound 
      {
        name                         = "AllowInternetIngressFwHttpsInbound"
        priority                     = 4000
        direction                    = "Inbound"
        access                       = "Allow"
        protocol                     = "Tcp"
        source_port_range            = "443"
        source_port_ranges           = [""]
        destination_port_range       = "443"
        destination_port_ranges      = [""]
        source_address_prefix        = "{{ internet_ingress_fw_subnet_cidr }}"
        source_address_prefixes      = [""]
        destination_address_prefix   = "{{ internet_ingress_appgw_subnet_cidr }}"
        destination_address_prefixes = [""]
      },
      {
        name                         = "AllowGatewayManagerV2Inbound"
        priority                     = 4001
        direction                    = "Inbound"
        access                       = "Allow"
        protocol                     = "Tcp"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = ""
        destination_port_ranges      = ["65200-65535"]
        source_address_prefix        = "GatewayManager"
        source_address_prefixes      = [""]
        destination_address_prefix   = "*"
        destination_address_prefixes = [""]
      },
      {
        name                         = "AllowAzureLoadBalancerInbound"
        priority                     = 4002
        direction                    = "Inbound"
        access                       = "Allow"
        protocol                     = "*"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = "*"
        destination_port_ranges      = [""]
        source_address_prefix        = "AzureLoadBalancer"
        source_address_prefixes      = [""]
        destination_address_prefix   = "*"
        destination_address_prefixes = [""]
      },
      {
        name                         = "DenyInternetInbound"
        priority                     = 4096
        direction                    = "Inbound"
        access                       = "Deny"
        protocol                     = "*"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = "*"
        destination_port_ranges      = [""]
        source_address_prefix        = "Internet"
        source_address_prefixes      = [""]
        destination_address_prefix   = "VirtualNetwork"
        destination_address_prefixes = [""]
      }
    ]
  }
  {% endif %}

  {% if (workload_zone | trim == '1') and (workload_app_subnet_nsg | trim == '1') %}
  workload_app_subnet_nsg = {
    rg_key = "workload_rg"
    name   = "{{ workload_app_subnet_nsg_name }}"
    tags   = {}
    security_rules = [
      # inbound 
      {
        name                         = "DenyInternetInbound"
        priority                     = 4096
        direction                    = "Inbound"
        access                       = "Deny"
        protocol                     = "*"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = "*"
        destination_port_ranges      = [""]
        source_address_prefix        = "Internet"
        source_address_prefixes      = [""]
        destination_address_prefix   = "VirtualNetwork"
        destination_address_prefixes = [""]
      },
      # outbound
      {
        name                         = "DenyInternetOutbound"
        priority                     = 4096
        direction                    = "Outbound"
        access                       = "Deny"
        protocol                     = "*"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = "*"
        destination_port_ranges      = [""]
        source_address_prefix        = "VirtualNetwork"
        source_address_prefixes      = [""]
        destination_address_prefix   = "Internet"
        destination_address_prefixes = [""]
      }
    ]
  }
  {% endif %}

  {% if (workload_zone | trim == '1') and (workload_db_subnet_nsg | trim == '1') %}
  workload_db_subnet_nsg = {
    rg_key = "workload_rg"
    name   = "{{ workload_db_subnet_nsg_name }}"
    tags   = {}
    security_rules = [
      # inbound 
      {
        name                         = "DenyInternetInbound"
        priority                     = 4096
        direction                    = "Inbound"
        access                       = "Deny"
        protocol                     = "*"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = "*"
        destination_port_ranges      = [""]
        source_address_prefix        = "Internet"
        source_address_prefixes      = [""]
        destination_address_prefix   = "VirtualNetwork"
        destination_address_prefixes = [""]
      },
      # outbound
      {
        name                         = "DenyInternetOutbound"
        priority                     = 4096
        direction                    = "Outbound"
        access                       = "Deny"
        protocol                     = "*"
        source_port_range            = "*"
        source_port_ranges           = [""]
        destination_port_range       = "*"
        destination_port_ranges      = [""]
        source_address_prefix        = "VirtualNetwork"
        source_address_prefixes      = [""]
        destination_address_prefix   = "Internet"
        destination_address_prefixes = [""]
      }
    ]
  }
  {% endif %}

  # internet_ingress_sftp_subnet_nsg = {
  #   rg_key = "internet_ingress_egress_rg"
  #   name   = "internet_ingress_egress_sftp_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "AllowFirewallSftpInbound"
  #       priority                     = 100
  #       direction                    = "Inbound"
  #       access                       = "Allow"
  #       protocol                     = "*"
  #       source_port_range            = "22"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "22"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "100.0.0.64/27"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "AllowFirewallSftpOutbound"
  #       priority                     = 100
  #       direction                    = "Outbound"
  #       access                       = "Allow"
  #       protocol                     = "*"
  #       source_port_range            = "22"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "22"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "100.0.0.64/27"
  #       destination_address_prefixes = [""]
  #     },
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # intranet_ingress_egress_sftp_subnet_nsg = {
  #   rg_key = "intranet_ingress_egress_rg"
  #   name   = "intranet_ingress_egress_sftp_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "AllowFirewallSftpInbound"
  #       priority                     = 100
  #       direction                    = "Inbound"
  #       access                       = "Allow"
  #       protocol                     = "*"
  #       source_port_range            = "22"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "22"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "10.0.0.64/27"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "AllowFirewallSftpOutbound"
  #       priority                     = 100
  #       direction                    = "Outbound"
  #       access                       = "Allow"
  #       protocol                     = "*"
  #       source_port_range            = "22"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "22"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "10.0.0.64/27"
  #       destination_address_prefixes = [""]
  #     },
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # mgmt_bastion_subnet_nsg = {
  #   rg_key = "mgmt_rg"
  #   name   = "mgmt_bastion_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # mgmt_ad_subnet_nsg = {
  #   rg_key = "mgmt_rg"
  #   name   = "mgmt_ad_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # mgmt_patch_subnet_nsg = {
  #   rg_key = "mgmt_rg"
  #   name   = "mgmt_patch_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # mgmt_dns_inbound_subnet_nsg = {
  #   rg_key = "mgmt_rg"
  #   name   = "mgmt_dns_inbound_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # mgmt_dns_outbound_subnet_nsg = {
  #   rg_key = "mgmt_rg"
  #   name   = "mgmt_dns_outbound_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }

  # mgmt_devops_subnet_nsg = {
  #   rg_key = "mgmt_rg"
  #   name   = "mgmt_devops_subnet_nsg"
  #   tags   = {}
  #   security_rules = [
  #     # inbound
  #     {
  #       name                         = "DenyInternetInbound"
  #       priority                     = 4096
  #       direction                    = "Inbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "Internet"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "VirtualNetwork"
  #       destination_address_prefixes = [""]
  #     },
  #     # outbound
  #     {
  #       name                         = "DenyInternetOutbound"
  #       priority                     = 4096
  #       direction                    = "Outbound"
  #       access                       = "Deny"
  #       protocol                     = "*"
  #       source_port_range            = "*"
  #       source_port_ranges           = [""]
  #       destination_port_range       = "*"
  #       destination_port_ranges      = [""]
  #       source_address_prefix        = "VirtualNetwork"
  #       source_address_prefixes      = [""]
  #       destination_address_prefix   = "Internet"
  #       destination_address_prefixes = [""]
  #     }
  #   ]
  # }
}

# Network security group associations
network_security_group_associations = {
  # internet_ingress_egress_sftp_subnet_nsg_assoc = {
  #   nsg_key    = "internet_ingress_egress_sftp_subnet_nsg"
  #   subnet_key = "internet_ingress_egress_sftp_subnet"
  # }

  # intranet_ingress_egress_sftp_subnet_nsg_assoc = {
  #   nsg_key    = "intranet_ingress_egress_sftp_subnet_nsg"
  #   subnet_key = "intranet_ingress_egress_sftp_subnet"
  # }

  # mgmt_bastion_subnet_nsg_assoc = {
  #   nsg_key    = "mgmt_bastion_subnet_nsg"
  #   subnet_key = "mgmt_bastion_subnet"
  # }

  # mgmt_ad_subnet_nsg_assoc = {
  #   nsg_key    = "mgmt_ad_subnet_nsg"
  #   subnet_key = "mgmt_ad_subnet"
  # }

  # mgmt_patch_subnet_nsg_assoc = {
  #   nsg_key    = "mgmt_patch_subnet_nsg"
  #   subnet_key = "mgmt_patch_subnet"
  # }

  # mgmt_dns_inbound_subnet_nsg_assoc = {
  #   nsg_key    = "mgmt_dns_inbound_subnet_nsg"
  #   subnet_key = "mgmt_dns_inbound_subnet"
  # }

  # mgmt_dns_outbound_subnet_nsg_assoc = {
  #   nsg_key    = "mgmt_dns_outbound_subnet_nsg"
  #   subnet_key = "mgmt_dns_outbound_subnet"
  # }
}

##########################################
# Firewall module
##########################################

# Firewall public ips
firewall_public_ips = {
  {% if internet_ingress_fw | trim == '1' %}
  # internet ingress firewall public ip
  internet_ingress_firewall_public_ip = {
    rg_key            = "internet_ingress_rg"
    name              = "{{ internet_ingress_fw_public_ip_name }}"
    allocation_method = "{{ internet_ingress_fw_public_ip_allocation_method }}"
    sku               = "{{ internet_ingress_fw_public_ip_sku }}"
  }
  {% endif %}
  
  {% if internet_egress_fw | trim == '1' %}
  # internet egress firewall public ip
  internet_egress_firewall_public_ip = {
    rg_key            = "internet_egress_rg"
    name              = "{{ internet_egress_fw_public_ip_name }}"
    allocation_method = "{{ internet_egress_fw_public_ip_allocation_method }}"
    sku               = "{{ internet_egress_fw_public_ip_sku }}"
  }
  {% endif %}

  {% if intranet_ingress_fw | trim == '1' %}
  # intranet ingress firewall public ip
  intranet_ingress_firewall_public_ip = {
    rg_key            = "intranet_ingress_rg"
    name              = "{{ intranet_ingress_fw_public_ip_name }}"
    allocation_method = "{{ intranet_ingress_fw_public_ip_allocation_method }}"
    sku               = "{{ intranet_ingress_fw_public_ip_sku }}"
  }
  {% endif %}

  {% if intranet_egress_fw | trim == '1' %}
  # intranet egress firewall public ip
  intranet_egress_firewall_public_ip = {
    rg_key            = "intranet_egress_rg"
    name              = "{{ intranet_egress_fw_public_ip_name }}"
    allocation_method = "{{ intranet_egress_fw_public_ip_allocation_method }}"
    sku               = "{{ intranet_egress_fw_public_ip_sku }}"
  }
  {% endif %}
}

# Firewall
firewalls = {
  {% if internet_ingress_fw | trim == '1' %}
  # internet ingress firewall
  internet_ingress_firewall = {
    rg_key   = "internet_ingress_rg"
    name     = "{{ internet_ingress_fw_name }}"
    sku_name = "{{ internet_ingress_fw_sku_name }}"
    sku_tier = "{{ internet_ingress_fw_sku_tier }}"

    ip_configurations = [
      {
        subnet_key     = "internet_ingress_firewall_subnet"
        public_ip_key  = "internet_ingress_firewall_public_ip"
        ip_config_name = "{{ internet_ingress_fw_ip_config_name }}"
      }
    ]
    virtual_hubs = []
  }
  {% endif %}

  {% if internet_egress_fw | trim == '1' %}
  # internet egress firewall
  internet_egress_firewall = {
    rg_key   = "internet_egress_rg"
    name     = "{{ internet_egress_fw_name }}"
    sku_name = "{{ internet_egress_fw_sku_name }}"
    sku_tier = "{{ internet_egress_fw_sku_tier }}"

    ip_configurations = [
      {
        subnet_key     = "internet_egress_firewall_subnet"
        public_ip_key  = "internet_egress_firewall_public_ip"
        ip_config_name = "{{ internet_egress_fw_ip_config_name }}"
      }
    ]
    virtual_hubs = []
  }
  {% endif %}

  {% if intranet_ingress_fw | trim == '1' %}
  # intranet ingress egress firewall
  intranet_ingress_firewall = {
    rg_key   = "intranet_ingress_rg"
    name     = "{{ intranet_ingress_fw_name }}"
    sku_name = "{{ intranet_ingress_fw_sku_name }}"
    sku_tier = "{{ intranet_ingress_fw_sku_tier }}"

    ip_configurations = [
      {
        subnet_key     = "intranet_ingress_firewall_subnet"
        public_ip_key  = "intranet_ingress_firewall_public_ip"
        ip_config_name = "{{ intranet_ingress_fw_ip_config_name }}"
      }
    ]
    virtual_hubs = []
  }
  {% endif %}

  {% if intranet_egress_fw | trim == '1' %}
  # intranet egress egress firewall
  intranet_egress_firewall = {
    rg_key   = "intranet_egress_rg"
    name     = "{{ intranet_egress_fw_name }}"
    sku_name = "{{ intranet_egress_fw_sku_name }}"
    sku_tier = "{{ intranet_egress_fw_sku_tier }}"
  
    ip_configurations = [
      {
        subnet_key     = "intranet_egress_firewall_subnet"
        public_ip_key  = "intranet_egress_firewall_public_ip"
        ip_config_name = "{{ intranet_egress_fw_ip_config_name }}"
      }
    ]
    virtual_hubs = []
  }
  {% endif %}
}

firewall_app_rule_collections = {
  # internet_egress_firewall_aks_app_rules_collection = {
  #   rg_key       = "internet_egress_rg"
  #   firewall_key = "internet_egress_firewall"
  #   name         = "internet-aks-app-rules"
  #   priority     = "100"
  #   action       = "Allow"
  #   rules = [
  #     {
  #       name             = "AllowMicrosoftFqdns"
  #       source_addresses = ["*"]
  #       fqdn_tags        = null
  #       target_fqdns = [
  #         "*.cdn.mscr.io",
  #         "mcr.microsoft.com",
  #         "*.data.mcr.microsoft.com",
  #         "management.azure.com",
  #         "login.microsoftonline.com",
  #         "acs-mirror.azureedge.net",
  #         "dc.services.visualstudio.com",
  #         "*.opinsights.azure.com",
  #         "*.oms.opinsights.azure.com",
  #         "*.microsoftonline.com",
  #         "*.monitoring.azure.com"
  #       ]
  #       protocols = [
  #         {
  #           port = "80"
  #           type = "Http"
  #         },
  #         {
  #           port = "443"
  #           type = "Https"
  #         }
  #       ]
  #     },
  #     {
  #       name             = "AllowFqdnsForOsUpdates"
  #       source_addresses = ["*"]
  #       fqdn_tags        = null
  #       target_fqdns = [
  #         "security.ubuntu.com",
  #         "ntp.ubuntu.com",
  #         "packages.microsoft.com"
  #       ]
  #       protocols = [
  #         {
  #           port = "80"
  #           type = "Http"
  #         },
  #         {
  #           port = "443"
  #           type = "Https"
  #         }
  #       ]
  #     },
  #     {
  #       name             = "ServiceTag"
  #       source_addresses = ["*"]
  #       fqdn_tags = [
  #         "AzureKubernetesService"
  #       ]
  #       target_fqdns = null
  #       protocols    = []
  #     }
  #   ]
  # }

  # intranet_egress_firewall_aks_app_rules_collection = {
  #   rg_key       = "intranet_egress_rg"
  #   firewall_key = "intranet_egress_firewall"
  #   name         = "intranet-aks-app-rules"
  #   priority     = "200"
  #   action       = "Allow"
  #   rules = [
  #     {
  #       name             = "AllowMicrosoftFqdns"
  #       source_addresses = ["*"]
  #       fqdn_tags        = null
  #       target_fqdns = [
  #         "*.cdn.mscr.io",
  #         "mcr.microsoft.com",
  #         "*.data.mcr.microsoft.com",
  #         "management.azure.com",
  #         "login.microsoftonline.com",
  #         "acs-mirror.azureedge.net",
  #         "dc.services.visualstudio.com",
  #         "*.opinsights.azure.com",
  #         "*.oms.opinsights.azure.com",
  #         "*.microsoftonline.com",
  #         "*.monitoring.azure.com"
  #       ]
  #       protocols = [
  #         {
  #           port = "80"
  #           type = "Http"
  #         },
  #         {
  #           port = "443"
  #           type = "Https"
  #         }
  #       ]
  #     },
  #     {
  #       name             = "AllowFqdnsForOsUpdates"
  #       source_addresses = ["*"]
  #       fqdn_tags        = null
  #       target_fqdns = [
  #         "security.ubuntu.com",
  #         "ntp.ubuntu.com",
  #         "packages.microsoft.com"
  #       ]
  #       protocols = [
  #         {
  #           port = "80"
  #           type = "Http"
  #         },
  #         {
  #           port = "443"
  #           type = "Https"
  #         }
  #       ]
  #     },
  #     {
  #       name             = "ServiceTag"
  #       source_addresses = ["*"]
  #       fqdn_tags = [
  #         "AzureKubernetesService"
  #       ]
  #       target_fqdns = null
  #       protocols    = []
  #     }
  #   ]
  # }
}

firewall_network_rule_collections = {
  # internet_egress_firewall_aks_network_rules_collection = {
  #   rg_key       = "internet_egress_rg"
  #   firewall_key = "internet_egress_firewall"
  #   name         = "aks-network-rules"
  #   priority     = "100"
  #   action       = "Allow"
  #   rules = [
  #     {
  #       name                  = "apiudp"
  #       source_addresses      = ["*"]
  #       destination_addresses = ["AzureCloud.SoutheastAsia"]
  #       destination_ports     = ["1194"]
  #       protocols             = ["UDP"]
  #     },
  #     {
  #       name                  = "aksfwnr"
  #       source_addresses      = ["*"]
  #       destination_addresses = ["AzureCloud.SoutheastAsia"]
  #       destination_ports     = ["9000"]
  #       protocols             = ["TCP"]
  #     },
  #     {
  #       name                  = "DNS"
  #       source_addresses      = ["*"]
  #       destination_ports     = ["53"]
  #       destination_addresses = ["*"]
  #       protocols             = ["UDP"]
  #     },
  #     {
  #       name              = "ServiceTags"
  #       source_addresses  = ["*"]
  #       destination_ports = ["*"]
  #       destination_addresses = [
  #         "AzureContainerRegistry",
  #         "MicrosoftContainerRegistry",
  #         "AzureActiveDirectory",
  #       ]
  #       protocols = ["Any"]
  #     },
  #     {
  #       name                  = "Time"
  #       source_addresses      = ["*"]
  #       destination_ports     = ["123"]
  #       destination_addresses = ["*"]
  #       protocols             = ["UDP"]
  #     }
  #   ]
  # }

  # intranet_egress_firewall_aks_network_rules_collection = {
  #   rg_key       = "intranet_egress_rg"
  #   firewall_key = "intranet_egress_firewall"
  #   name         = "aks-network-rules"
  #   priority     = "200"
  #   action       = "Allow"
  #   rules = [
  #     {
  #       name                  = "apiudp"
  #       source_addresses      = ["*"]
  #       destination_addresses = ["AzureCloud.SoutheastAsia"]
  #       destination_ports     = ["1194"]
  #       protocols             = ["UDP"]
  #     },
  #     {
  #       name                  = "aksfwnr"
  #       source_addresses      = ["*"]
  #       destination_addresses = ["AzureCloud.SoutheastAsia"]
  #       destination_ports     = ["9000"]
  #       protocols             = ["TCP"]
  #     },
  #     {
  #       name                  = "DNS"
  #       source_addresses      = ["*"]
  #       destination_ports     = ["53"]
  #       destination_addresses = ["*"]
  #       protocols             = ["UDP"]
  #     },
  #     {
  #       name              = "ServiceTags"
  #       source_addresses  = ["*"]
  #       destination_ports = ["*"]
  #       destination_addresses = [
  #         "AzureContainerRegistry",
  #         "MicrosoftContainerRegistry",
  #         "AzureActiveDirectory",
  #       ]
  #       protocols = ["Any"]
  #     },
  #     {
  #       name                  = "Time"
  #       source_addresses      = ["*"]
  #       destination_ports     = ["123"]
  #       destination_addresses = ["*"]
  #       protocols             = ["UDP"]
  #     }
  #   ]
  # }
}

##########################################
# Storage account module
##########################################

storage_accounts = {
  {% if (internet_ingress_sftp | trim == '1') and (internet_ingress_sftp_storage_account | trim == '1') %}
  internet_ingress_sftp_storage_account = {
    rg_key                        = "internet_ingress_rg"
    name                          = "{{ internet_ingress_sftp_storage_account_name }}"
    account_tier                  = "{{ internet_ingress_sftp_storage_account_tier }}"
    account_replication_type      = "{{ internet_ingress_sftp_storage_account_replication_type }}"
    public_network_access_enabled = "{{ internet_ingress_sftp_storage_account_public_network_access_enabled }}"
    is_hns_enabled                = "{{ internet_ingress_sftp_storage_account_is_hns_enabled }}"
    sftp_enabled                  = "{{ internet_ingress_sftp_storage_account}}"
    identity_type                 = "{{ internet_ingress_sftp_storage_account_identity_type }}"
  }
  {% endif %}

  {% if (intranet_ingress_sftp | trim == '1') and (intranet_ingress_sftp_storage_account | trim == '1') %}
  intranet_ingress_sftp_storage_account = {
    rg_key                        = "intranet_ingress_rg"
    name                          = "{{ intranet_ingress_sftp_storage_account_name }}"
    account_tier                  = "{{ intranet_ingress_sftp_storage_account_tier }}"
    account_replication_type      = "{{ intranet_ingress_sftp_storage_account_replication_type }}"
    public_network_access_enabled = "{{ intranet_ingress_sftp_storage_account_public_network_access_enabled }}"
    is_hns_enabled                = "{{ intranet_ingress_sftp_storage_account_is_hns_enabled }}"
    sftp_enabled                  = "{{ intranet_ingress_sftp_storage_account }}"
    identity_type                 = "{{ intranet_ingress_sftp_storage_account_identity_type }}"
  }
  {% endif %}
}

storage_account_private_endpoints = {
  {% if (internet_ingress_sftp | trim == '1') and (internet_ingress_sftp_storage_account | trim == '1') %}
  internet_ingress_sftp_storage_account_private_endpoint = {
    rg_key     = "internet_ingress_rg"
    subnet_key = "internet_ingress_sftp_subnet"
    name       = "{{ internet_ingress_sftp_storage_account_private_endpoint_name }}"
    private_service_connections = [
      {
        storage_account_key  = "internet_ingress_sftp_storage_account"
        name                 = "{{ internet_ingress_sftp_storage_account_private_endpoint_psc_name }}"
        is_manual_connection = {{ internet_ingress_sftp_storage_account_private_endpoint_psc_is_manual_connection }}
        subresource_names    = ["{{ internet_ingress_sftp_storage_account_private_endpoint_psc_subresource_names }}"]
      }
    ]
  }
  {% endif %}

  {% if (intranet_ingress_sftp | trim == '1') and (intranet_ingress_sftp_storage_account | trim == '1') %}
  intranet_ingress_sftp_storage_account_private_endpoint = {
    rg_key     = "intranet_ingress_rg"
    subnet_key = "intranet_ingress_sftp_subnet"
    name       = "{{ intranet_ingress_sftp_storage_account_private_endpoint_name }}"
    private_service_connections = [
      {
        storage_account_key  = "intranet_ingress_sftp_storage_account"
        name                 = "{{ intranet_ingress_sftp_storage_account_private_endpoint_psc_name }}"
        is_manual_connection = {{ intranet_ingress_sftp_storage_account_private_endpoint_psc_is_manual_connection }}
        subresource_names    = ["{{ intranet_ingress_sftp_storage_account_private_endpoint_psc_subresource_names }}"]
      }
    ]
  }
  {% endif %}
}

storage_account_private_endpoint_private_dns_zone_a_records = {
  {% if (internet_ingress_sftp | trim == '1') and (internet_ingress_sftp_storage_account | trim == '1') %}
  internet_ingress_sftp_storage_account_private_dns_zone_a_records = {
    private_dns_zone_key = "privatelink_blob_core_windows_net_zone"
    private_endpoint_key = "internet_ingress_sftp_storage_account_private_endpoint"
    rg_key               = "mgmt_rg"
    storage_account_key  = "internet_ingress_sftp_storage_account"
    ttl                  = 3600
  }
  {% endif %}

  {% if (intranet_ingress_sftp | trim == '1') and (intranet_ingress_sftp_storage_account | trim == '1') %}
  intranet_ingress_sftp_storage_account_private_dns_zone_a_records = {
    private_dns_zone_key = "privatelink_blob_core_windows_net_zone"
    private_endpoint_key = "intranet_ingress_sftp_storage_account_private_endpoint"
    rg_key               = "mgmt_rg"
    storage_account_key  = "intranet_ingress_sftp_storage_account"
    ttl                  = 3600
  }
  {% endif %}
}


##########################################
# Bastion module
##########################################

# Bastion public ips
bastion_public_ips = {
  {% if mgmt_bastion | trim == '1' %}
  mgmt_bastion_public_ip = {
    rg_key            = "mgmt_rg"
    name              = "{{ mgmt_bastion_public_ip_name }}"
    allocation_method = "{{ mgmt_bastion_public_ip_allocation_method }}"
    sku               = "{{ mgmt_bastion_public_ip_sku}}"
  }
  {% endif %}
}

# Bastion
bastions = {
  {% if mgmt_bastion | trim == '1' %}
  mgmt_bastion = {
    rg_key         = "mgmt_rg"
    subnet_key     = "mgmt_bastion_subnet"
    public_ip_key  = "mgmt_bastion_public_ip"
    name           = "{{ mgmt_bastion_name }}"
    ip_config_name = "{{ mgmt_bastion_ip_config_name }}"
  }
  {% endif %}
}

##########################################
# Private DNS zone module
##########################################

private_dns_zones = {
  {% if mgmt_zone | trim == '1' %}
  privatelink_blob_core_windows_net_zone = {
    rg_key = "mgmt_rg"
    name   = "privatelink.blob.core.windows.net"
  }
  {% endif %}
}

private_dns_zone_vnet_links = {
  {% if (dns_forwarding_zone | trim == '1') and (dns_forwarding_private_dns_resolver | trim == '1') %}
  blob_core_windows_net_zone_dns_forwarding_vnet_link = {
    rg_key               = "mgmt_rg"
    private_dns_zone_key = "privatelink_blob_core_windows_net_zone"
    vnet_key             = "dns_forwarding_vnet"
    name                 = "dns_forwarding_vnet_private_dns_zone_link"
  }
  {% endif %}
}

##########################################
# Private DNS resolver module
##########################################

private_dns_resolvers = {
  {% if (dns_forwarding_zone | trim == '1') and (dns_forwarding_private_dns_resolver | trim == '1') %}
  dns_forwarding_private_dns_resolver = {
    rg_key   = "dns_forwarding_rg"
    vnet_key = "dns_forwarding_vnet"
    name     = "{{ dns_forwarding_private_dns_resolver_name }}"
  }
  {% endif %}
}

private_dns_resolvers_inbound_endpoints = {
  {% if (dns_forwarding_zone | trim == '1') and (dns_forwarding_private_dns_resolver | trim == '1') %}
  private_dns_resolver_inbound_endpoint = {
    private_dns_resolver_key     = "dns_forwarding_private_dns_resolver"
    subnet_key                   = "private_dns_resolver_inbound_subnet"
    name                         = "private_dns_resolver_inbound_endpoint"
    private_ip_allocation_method = "Dynamic"
  }
  {% endif %}
}

private_dns_resolvers_outbound_endpoints = {
  {% if (dns_forwarding_zone | trim == '1') and (dns_forwarding_private_dns_resolver | trim == '1') %}
  private_dns_resolver_outbound_endpoint = {
    private_dns_resolver_key     = "dns_forwarding_private_dns_resolver"
    subnet_key                   = "private_dns_resolver_outbound_subnet"
    name                         = "private_dns_resolver_outbound_endpoint"
    private_ip_allocation_method = "Dynamic"
  }
  {% endif %}
}